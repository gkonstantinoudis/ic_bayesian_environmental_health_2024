---
title: "Bayesian Regression and Temporal Modelling"
subtitle: "Key ideas and concepts"
author:
 - name: "Robbie M. Parks"
   email: "robbie.parks@columbia.edu"
institute: "Environmental Health Sciences, Columbia University"
date: 2023-08-14
date-format: medium
title-slide-attributes:
  data-background-color: "#f3f4f4"
  data-background-image: "../../assets/bmeh_normal.png"
  data-background-size: 80%
  data-background-position: 60% 120%
format:
  revealjs:
    slide-number: true
    incremental: true
    chalkboard:
      buttons: false
      preview-links: auto
    logo: "../../assets/bmeh_normal.png"
    theme: [default, ../../assets/style.scss]
---

```{r}
library(here)
library(tidyverse)
library(nimble)
library(bayesplot)
library(posterior)
library(hrbrthemes)
```

# Outline

- Introduction
- Types of regression modelling
- Generalized linear models
- Getting ready for the lab

# Overview

## Introduction

::: nonincremental
- Generate some points:
:::

``` R
# Load packages
library(ggplot2)

# Create a dataset
set.seed(100)
data = data.frame(x=rnorm(100),y=rnorm(100))

# Plot and rough fit
p <- ggplot(data, aes(x, y)) +
  geom_point()

plot(p)
```

## Introduction

::: nonincremental
- Plot the generated points:
:::

```{r}
#| echo: false
library(ggplot2)
set.seed(100)
data <- data.frame(x = rnorm(100), y = rnorm(100))

p <- ggplot(data, aes(x, y)) +
  geom_point()

plot(p)
```

## Introduction

::: nonincremental
- Trying to establish some kind of relationship between predictor and outcome:
:::

```{r}
#| echo: false
library(ggplot2)
set.seed(100)
data <- data.frame(x = rnorm(100), y = rnorm(100))

p <- ggplot(data, aes(x, y)) +
  geom_point() +
  geom_smooth(method = "loess")

plot(p)
```

## Regression models

- Most commonly used to assess presence of a relationship between a dependent variable and one or more independent variables.
- Bayesian regression originally used in econometrics.
- Now wide range of fields use regression, including environmental epidemiology.
- Partly why we find ourselves here today!

## Regression models

- Basic steps to regression models:
1. Establish suitable model for observations.
2. Identify type of relationship between predictor(s) and outcome.
3. For Bayesian approach, specify prior distributions too.
4. Run the model somehow (`NIMBLE`).

# Suitable models for observations.

## Link function

- When modelling, we must make a decision about how the predictors are related to the key parameters in our chosen relationship.
- You will see several of the remaining time in the workshop.

## Link function




# Relationship between predictor(s) and outcome

## Linear regression

- Simplest regression model.
- Assuming a linear relationship between predictors and the outcome.
- Used in countless different applications.

## Normal distribution

::: nonincremental
- As seen in first lecture.
:::

$$
\begin{split}
y_i &\sim \text{Normal}(\mu_i, \sigma) \quad i = 1,..., N \\
\mu_i &= \alpha + \beta_1 x_1 + \beta_2 x_2 + \beta_3 x_3
\end{split}
$$

<!-- ## Linear regression -->

<!-- - Each outcome $y_i$ is normally distributed as follows: -->
<!-- - $$y_i \sim Normal(\mu_i,\sigma^2)$$ -->
<!-- - Remember what these symbols all mean? -->



## Back to linear regression

- Assuming we just express $\mu_i$ as a linear function of parameters of interest
- $$\mu_i = ...$$

## Reminder of regression model steps

::: nonincremental
- Basic steps to regression models:
1. Establish suitable probability distribution for observations.
2. Identify type of relationship between predictor(s) and outcome.
<span style="color:red;">3. For Bayesian approach, specify prior distributions too</span>.
:::

## Reminder of regression model steps

::: nonincremental
- Basic steps to regression models:
- 1. Estbalish suitable probability distribution for observations. (done)
- 2. Identify type of relationship between predictor(s) and outcome. (done)
- <span style="color:red;">3. For Bayesian approach, specify prior distributions too</span>. (need to specify)
:::

## Setting priors

- Need to do this on:
- The regression parameters (i.e., the $\Beta$ parameters).
- Variance of outcome ($\sigma^2$).

## Setting priors

- In absence of information, set priors as vague:

``` R
alpha ~ dnorm(0, sd = 100) # prior for alpha
```

## Linear regression

::: nonincremental
- As a reminder of last lab, in `NIMBLE`, we can write:
:::

``` R
code <- nimbleCode({
  # priors for parameters
  alpha ~ dnorm(0, sd = 100) # prior for alpha
  beta1 ~ dnorm(0, sd = 100) # prior for beta1
  beta2 ~ dnorm(0, sd = 100) # prior for beta2
  beta3 ~ dnorm(0, sd = 100) # prior for beta3
  sigma ~ dunif(0, 100) # prior for variance components

  # regression formula
  for (i in 1:n) { # n is the number of observations we have in the data
    mu[i] <- alpha + beta1 * x1[i] + beta2 * x2[i] + beta3 * x3[i] # manual entry of linear predictors
    y[i] ~ dnorm(mu[i], sd = sigma)
  }
})
```

## Linear regression: Real world example

::: nonincremental
- Let's load in the data we'll use for lab (Spain mortality).
:::

``` R
data <- read_csv(here("data", "Spain", "data_spain.csv"))
```

```{r}
data <- read_csv(here("data", "Spain", "data_spain.csv"))
```



## Evaluating model fit

- Sometimes a seemingly reasonable approach can result in unexpected results.
- When this happens (and in general), good idea to have some way to evaluate model fit of candidate models.
- Ideally residuals after model fit are essentially random centered around zero.

## Non-linear regression

- Seasonality can exist in data, for example, that requires accounting for.

## Non-linear regression

- Also, there can be autocorrelation between neighboring time points.
- Random walk.

## Non-linear regression: Real world example

- A preview of lab (Spain but with random walk)

# Genrealized linear models

## Exponential family of models

- Sometimes dependent variable is not normally distributed.
- Exponential family is family of models described in a certain way (won't get into it in this workshop):
- $$ XX $$

## Generalized linear models

- Extension of linear regression to when distribution not necessarily normally distributed.
- Distributions which are part of the exponential family can describe all sort of non-normally distributed variables.
- Many examples commonly encountered in environmental health.
- We'll go through a few now...

## Logistic regression

- Part of exponential family.
- Standard for binary outcomes (yes/no).
- Many examples in environmental health, such as whether a person died.

## Logistic regression

- If dependent variable represents individual units:
- Distributed with Bernoulli (only zero or one).

## Logistic regression

- If dependent variable represents sets of trails of yes/no:
- Distributed with Binomial (zero to $n$ successes).

## Link function

::: nonincremental
- When modelling, we must make a decision about how the predictors are related to the key parameters in our chosen relationship
- You will see several of the remaining time in the workshop.
:::

## Link function fo logistic regression

- Binomial formula.
- Link function on $pi$ is $logit$ (ln(p/1-p)). (log odds).

## Logistic regression: Real world example

- A preview of lab (something from UK/Italy dataset but progression from linear (mortality?))

## Poisson regression

- Part of exponential family.
- Used typically with count data (number of events happening within a discrete space and time).
- Can approximate to Binomial for high n and low p.

## Link function

::: nonincremental
- When modelling, we must make a decision about how the predictors are related to the key parameters in our chosen relationship
- You will see several of the remaining time in the workshop.
:::

## Link function for logistic regression

- Poisson formula.
- Link function on log link (ensures counts don't ever become negative).

## Poisson regression: Real world example

- A preview of lab (something from UK/Italy dataset but progression from linear)

## Temporal modelling

- Regression but with time as a component.
- Modelled linearly?
- Modelled non-linearly?

# Prior distributions

# Getting ready for the lab

## Goal of this computing lab session {.smaller}

This goal of this lab is to explore some key temporal modelling concepts, including linear slopes, random walks and inclusion of linear exposure terms.

## What's going to happen in this lab session?

During this lab session, we will:

1. Explore some real time series mortality data;
2. Apply a basic linear model;
3. Apply a non-linear model;
4. Incorporate basic temperature term into model;
5. Modify temperature term to be month-specific; and
6. Explore how well model convergence and fit performs.

# Questions?


